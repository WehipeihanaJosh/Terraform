parameters:
  - name: AzureRMServiceConnection
    type: string

steps:
  # Set AzureRM credentials to environment variables using Terraform's convention.
  # https://www.terraform.io/language/settings/backends/azurerm
  - task: AzureCLI@2
    displayName: Fetch credentials from service connection
    inputs:
      azureSubscription: ${{ parameters.AzureRMServiceConnection }}
      scriptType: "pscore"
      # 'addSpnToEnvironment' is required so that the service principal details are available
      addSpnToEnvironment: true
      scriptLocation: "inlineScript"
      # the service principal settings are saved to the 'well known' terraform AzureRM ARM variables
      # for the duration of the stage
      inlineScript: |
        Write-Host "Setting Terraform environment variables for Azure RM..."

        $subscriptionId = az account show --query id --output tsv
        Write-Host "##vso[task.setvariable variable=ARM_TENANT_ID]$env:tenantId"
        Write-Host "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$subscriptionId"
        Write-Host "##vso[task.setvariable variable=ARM_CLIENT_ID]$env:servicePrincipalId"

        if ($env:idToken) {
          Write-Host "Using federated credentials for workload identity."
          Write-Host "##vso[task.setvariable variable=ARM_USE_OIDC]true"
          Write-Host "##vso[task.setvariable variable=ARM_OIDC_TOKEN;issecret=true]$env:idToken"
        }
        else {
          Write-Host "Using service principal credentials"
          Write-Host "##vso[task.setvariable variable=ARM_CLIENT_SECRET;issecret=true]$env:servicePrincipalKey"
        }
